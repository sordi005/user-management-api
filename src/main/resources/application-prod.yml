spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      # Pool de conexiones optimizado para producción
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: validate  # NUNCA 'update' en producción
    show-sql: false      # Deshabilitado en producción
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        # Optimizaciones para producción
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        batch_versioned_data: true

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: false
    clean-disabled: true  # Seguridad crítica

# JWT Configuration con variables de entorno obligatorias
jwt:
  secret: ${JWT_SECRET}  # Debe ser proporcionado desde entorno
  expiration: ${JWT_EXPIRATION:3600000}  # 1 hora por defecto
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:86400000}  # 24 horas

# Configuración del servidor
server:
  port: ${SERVER_PORT:8080}
  # Seguridad adicional
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Logging optimizado para producción
logging:
  level:
    root: WARN
    com.sordi.usermanagement: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{HH:mm:ss} %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/user-management-api/application.log
    max-size: 100MB
    max-history: 30

# Actuator configurado para producción
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: never  # Seguridad: no mostrar detalles internos
  metrics:
    export:
      prometheus:
        enabled: true

# Configuración de cache (si se implementa)
spring.cache:
  type: redis
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
